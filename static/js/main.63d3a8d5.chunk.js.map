{"version":3,"sources":["services/user.service.js","App.jsx","index.js"],"names":["UserService","googleResponse","a","console","log","googleId","email","profileObj","idToken","tokenId","axios","url","method","headers","Authorization","data","response","userData","App","useState","setUserData","signedIn","setSignedIn","show","setShow","useEffect","accessKey","username","userService","onUserLogIn","createUser","onUpdateAccessKey","updateAccessKey","name","className","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","Link","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","type","value","onClick","navigator","clipboard","writeText","Alert","variant","onClose","dismissible","Heading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d3a8d5.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class UserService {\n  async createUser(googleResponse) {\n    console.log(googleResponse);\n    const googleId = googleResponse.googleId;\n    const email = googleResponse.profileObj.email;\n    const idToken = googleResponse.tokenId;\n    try {\n      const response = await axios({\n        url: 'https://measurment-assistant.herokuapp.com/api/user',\n        method: 'POST',\n        headers: {\n          Authorization: idToken\n        },\n        data: {\n          googleId,\n          email\n        }\n      });\n      return response.data.userData;\n    } catch (error) {\n      return error;\n    }\n  }\n\n  async updateAccessKey(email, idToken, googleId) {\n    try {\n      const response = await axios({\n        url: 'https://measurment-assistant.herokuapp.com/api/user/accesskey',\n        method: 'PUT',\n        headers: {\n          Authorization: idToken\n        },\n        data: {\n          googleId,\n          email\n        }\n      });\n      return response.data.userData;\n    } catch (error) {\n      return error;\n    }\n  }\n}\n","import React from 'react';\r\nimport SwaggerUI from 'swagger-ui-react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { useState, useEffect } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport UserService from './services/user.service';\r\nimport './App.css';\r\nimport 'swagger-ui-react/swagger-ui.css';\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({});\r\n  const [signedIn, setSignedIn] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // console.log(userData);\r\n    if (userData.accessKey && userData.username) {\r\n      setSignedIn(true);\r\n    }\r\n  }, [userData]);\r\n\r\n  const userService = new UserService();\r\n\r\n  const onUserLogIn = async (googleResponse) => {\r\n    const { accessKey, username } = await userService.createUser(googleResponse);\r\n    const { tokenId, googleId } = googleResponse\r\n    setUserData({ accessKey, username, tokenId, googleId });\r\n  };\r\n\r\n  const onUpdateAccessKey = async () => {\r\n    const response = await userService.updateAccessKey(userData.username, userData.tokenId, userData.googleId);\r\n    if(response.name=='Error'){\r\n     setShow(true)\r\n    }else{\r\n    const accessKey= response.accessKey;\r\n    setUserData({ ...userData, accessKey});}\r\n  };\r\n\r\n  const onUserLogOut = () => {\r\n    setSignedIn(false);\r\n    setUserData({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Measurement Assistant</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Documents</Nav.Link>\r\n            </Nav>\r\n            <Nav className=\"justify-content-end\">\r\n              {signedIn ? (\r\n                <>\r\n                  <small className={'userName'}>Signed in as {userData.username}</small>\r\n                  <GoogleLogout\r\n                    clientId=\"759950908416-hdi0alconb3krbcblsmidir074uvafoj.apps.googleusercontent.com\"\r\n                    buttonText=\"Sign out\"\r\n                    onLogoutSuccess={onUserLogOut}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <GoogleLogin\r\n                  clientId=\"759950908416-hdi0alconb3krbcblsmidir074uvafoj.apps.googleusercontent.com\"\r\n                  buttonText=\"Sign in\"\r\n                  onSuccess={onUserLogIn}\r\n                  onFailure={onUserLogIn}\r\n                  cookiePolicy={'single_host_origin'}\r\n                />\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <div className={'accessKeyContainer'}>\r\n        <div className={'accessKeyInput'}>\r\n          <input\r\n            type=\"text\"\r\n            value={!signedIn ? 'Log in with google to get access key' : userData.accessKey}\r\n          ></input>\r\n          {!signedIn ? (\r\n            <GoogleLogin\r\n              clientId=\"759950908416-hdi0alconb3krbcblsmidir074uvafoj.apps.googleusercontent.com\"\r\n              buttonText=\"Sign in\"\r\n              onSuccess={onUserLogIn}\r\n              onFailure={onUserLogIn}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          ) : (\r\n            <>\r\n              <button className=\"btnToClipboard\"  onClick={() => {\r\n                  navigator.clipboard.writeText(userData.accessKey);\r\n                }}>\r\n                &#x274F;\r\n              </button>\r\n              <button\r\n                className=\"btnToClipboard\"\r\n                onClick={onUpdateAccessKey}\r\n              >\r\n                &#8635;\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {show==true? (\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Oops!</Alert.Heading>\r\n          <p>You should sign in again</p>\r\n        </Alert>\r\n        ):<></>}\r\n      <SwaggerUI url=\"https://measurment-assistant.herokuapp.com/documentation/json\" />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}